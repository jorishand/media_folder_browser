# General routes

mfb.view:
  path: '/media-folder-browser/overview'
  defaults:
    _controller: '\Drupal\media_folder_browser\Controller\MediaFolderController::renderBrowser'
  requirements:
    _permission: 'administer media folder browser'

mfb.refresh:
  path: '/media-folder-browser/overview/refresh/{folder_id}'
  defaults:
    _controller: '\Drupal\media_folder_browser\Controller\MediaFolderController::refreshResults'
    folder_id: null
  requirements:
    _permission: 'administer media folder browser'
  options:
    parameters:
      folder_id:
        type: int|null

mfb.sidebar.refresh:
  path: '/media-folder-browser/sidebar/refresh'
  defaults:
    _controller: '\Drupal\media_folder_browser\Controller\MediaFolderController::refreshSidebar'
  requirements:
    _permission: 'administer media folder browser'

mfb.search:
  path: '/media-folder-browser/search/{search_text}'
  defaults:
    _controller: '\Drupal\media_folder_browser\Controller\MediaFolderController::getSearchResults'
    search_text: ''
  requirements:
    _permission: 'administer media folder browser'
  options:
    parameters:
      search_text:
        type: string

# Folder entity related routes

mfb.folder.add:
  path: '/media-folder-browser/folder/add/{parent_id}'
  defaults:
    _controller: '\Drupal\media_folder_browser\Controller\MediaFolderController::addFolder'
    parent_id: null
  requirements:
    _permission: 'administer media folder browser'
  options:
    parameters:
      parent_id:
        type: int|null

mfb.folder.remove:
  path: '/media-folder-browser/folder/remove/{folder_id}'
  defaults:
    _controller: '\Drupal\media_folder_browser\Controller\MediaFolderController::removeFolder'
    folder_id: null
  requirements:
    _permission: 'administer media folder browser'
  options:
    parameters:
      folder_id:
        type: int

mfb.folder.rename:
  path: '/media-folder-browser/folder/rename/{folder_id}/{input}'
  defaults:
    _controller: '\Drupal\media_folder_browser\Controller\MediaFolderController::renameFolder'
  requirements:
    _permission: 'administer media folder browser'
  options:
    parameters:
      folder_id:
        type: int
      input:
        type: string

mfb.folder.move:
  path: '/media-folder-browser/folder/move/{folder_id}/{dest_folder_id}'
  defaults:
    _controller: '\Drupal\media_folder_browser\Controller\MediaFolderController::moveFolder'
  requirements:
    _permission: 'administer media folder browser'
  options:
    parameters:
      folder_id:
        type: int
      dest_folder_id:
        type: int

mfb.folder.move_parent:
  path: '/media-folder-browser/folder/move-parent/{folder_id}'
  defaults:
    _controller: '\Drupal\media_folder_browser\Controller\MediaFolderController::moveFolderParent'
  requirements:
    _permission: 'administer media folder browser'
  options:
    parameters:
      folder_id:
        type: int

# Media entity related routes

mfb.media.add:
  path: '/media-folder-browser/media/add/{folder_id}'
  defaults:
    _controller: '\Drupal\media_folder_browser\Controller\MediaFolderController::openForm'
    folder_id: null
  requirements:
    _permission: 'administer media folder browser'
  options:
    parameters:
      folder_id:
        type: int|null

mfb.media.remove:
  path: '/media-folder-browser/media/remove/{media_id}'
  defaults:
    _controller: '\Drupal\media_folder_browser\Controller\MediaFolderController::removeMedia'
  requirements:
    _permission: 'administer media folder browser'
  options:
    parameters:
      media_id:
        type: int

mfb.media.move:
  path: '/media-folder-browser/media/move/{media_id}/{folder_id}'
  defaults:
    _controller: '\Drupal\media_folder_browser\Controller\MediaFolderController::moveMedia'
  requirements:
    _permission: 'administer media folder browser'
  options:
    parameters:
      media_id:
        type: int
      folder_id:
        type: int

mfb.media.move_parent:
  path: '/media-folder-browser/media/move-parent/{media_id}'
  defaults:
    _controller: '\Drupal\media_folder_browser\Controller\MediaFolderController::moveMediaParent'
  requirements:
    _permission: 'administer media folder browser'
  options:
    parameters:
      media_id:
        type: int
